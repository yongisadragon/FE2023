-njs는 자바스크립트 런타임이다. 
-런타임이란, 프로그래밍 언어가 구동되는 환경이다!
-자바스크립트는 브라우저 내에서만 구동되었는데, 후에 서버, 머신러닝, 데스크탑 앱등 구동되는 환경이 확장됨으로써 노드js가 자바스크립트를 이용할 수 있는 분야를 넓혔다!
-njs는이벤트 기반이다. 이벤트가 발생할 떄 미리 지정해둔 작업을 수행하는 방식
-논블로킹 I/O (인풋아웃풋)
이전 작업이 완료될 때까지 기다리지 않고, 다음작업들을 수행. 오래걸리는 작업은 백그라운드에서 처리.. 처리하고 있는 동안 클라이언트는 계속 요청을 보낼 수 있음. 기다리지 않고 요청과 응답을 받을 수 있음.
반대 개념으로 블로킹io를 생각해보면 이전 작업이 완료될 때까지 기다려야 하기 때문에, 서버에서 처리하는 시간동안 클라이언트가 기다려야한다.(예 .실수로 좋아요 눌렀을 때 브라우저 작업완료까지 기다려야하는 상황..)
-싱글스레드 주어진 작업을 한개의 스레드가 처리하는 상황. 스레드란 작업을 실행하는 단위. 메모리나 기타 자원을 효율적으로 사용 가능. 반대로 멀티스레드는 여러개의 스레드가 일할 수 있지만, 스레드간 작업 전환비용, 놀고 있는 스레드 등이 발생할 수 있음.

-정리해보면 
1. 싱글 스레드, 논블로킹 I/O사용으로 빠른 속도. 
2. 컴퓨터 자원 덜 사용
3. I/O 작업이 많은 서버로 적합, 비동기 방식에 어울림(채팅, 스트리밍, 넷플릭스 페이팔 페이스북 등)
4. js사용으로 프론트에게 사용 용이
5. 생산성 높음

npm(node package manager)를 통해 여러 패키지를 다운받을 수 있음.
npm --version으로 확인

단점으로는 
자원 많이 먹는 작업에는 부하가 크게 걸림
콜백함수 늪에 빠질 수 있음 싱글스레드는 CPU코어 한개만 사용 , 에러가 발생하면 프로세스 자체가 죽음


서버란, 클라이언트의 요청에 대한 응답을 하는 역할입니다.