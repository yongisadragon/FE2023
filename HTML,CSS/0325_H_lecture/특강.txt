소풍
-article / section
구획을 나누는 요소들인데 어떻게 나누냐?! 어떤 기준입니까? 다른 서비스에 가져다 놔도 이상한가 안한가?로 생각해보쟈.

<article>:독립
어떤 페이지에붙여도 독립적으로 사용 가능하다면 article을 사용해보세요. 독립적인것이 포인트ex 블로그 글, 광고, 친구 추천 제안, 네이버 날씨 위제, 다크/라이트 모드, 매거진이나 뉴스 기사 등
느닷없이 등장해도 괜찮을 법한?

<section>:연관성
연관성있는 문서의 구획을 나누고자 할 때 사용하는 요소.. 느닷없다는 느낌이 들면 안돼.
같은 주제아래에 뭔가 제목이있고 -아이템들이 있는 하나의 섹션이 여러개 이어지는.. 그런 구조
오늘의 발견-오늘의 쇼핑-오늘의 제안-좋아할만한 상품..등

<header>
특정 컨텐츠의 시작 부분을 나타냄. 일반적으로 구역의 제목
마진컬럽션 해결법(BFC생성법)

1.부모에 overflow:hidden;
2.부모에 border값 주기
3.부모에 inline-block도 baseline 관련조그만한 여백이 생길 수있따.

가장 깔끔한 방법: 부모에  display: flow-root;를 주는 것이다! 이걸 생성하면 Block Formatting Context라는 걸 생성하는데, 위 3가지도 BFC를 생성하지만 조금씩의 부작용이 있다.이게 생성이 되면  float이나 마진 컬렙션을 해결한다.


inline-block간에는 text로 인식되기 때문에(img도 마찬가지) 여백이 발생한다. baseline관련 이슈이기 때문에 vertical-align로 해결을 하자.

-그래서 부모와 자식사이 간격..에 대한 설정을 할땐 마진 보다 패딩을 주는 것을 선호..

-요소와 요소 사이는 마진!

<position>
relative: top left등을 주면 자신의 위치를 기준으로, 움직인다.
absolute: static이 아닌 값에 걸린다.적용하는 순간, block으로 변함.(absolte, relative)그 위에 relative가 없을때, 거슬러 올라가 뷰포트가 그 기준이 된다. 그래서 relative 기준점을 잡을때, relative를 잡다. absolute하면 그 기준점 부모도 집 나가버림.
앵커a 안에 가상요소로 백그라운드를 넣는다고 할때, 백그라운드에 absolute를 줘서 뜨게할때에도 사용한다. 
position vs transform
position보다 trasform이 효율적이라고 볼 수있다. 실제 옮기려는 동작을수행할때,코드 길이의 차이도 있지만 transform은 이동한 위치에 따라서 리페인트 리플로우를 일으키지않아 (브라우저가 계산하는 작업). 브라우저 부담을 덜기위해 transform은 GPU를 이용한다. CPU는 넘 바뻐.

transform은 인라인에서 작동안하고 블록에서 작동함. 이를테면
span에 transform: translate(x,y);를 처음 먹이면 가만히 있는데, abosolute를 먹이면 block이 돼서 움직인다

네이버 같은 경우div로 도배돼있는데 크로스 브라우징 때문이다!

이미지와 설명이 붙어있을 때 이미지에 대한 설명이 필요할때->figure, figcaption

작성자 등 출처 - cite

carousel -> li 등으로 인식

저작권표시 html -> small
nav-> 사이트에서 주된 서비스를 묶는 링크들이 들어가야됨. 그점이 ul과는 구분되는 것.