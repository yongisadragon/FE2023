// 조건문> 조건식이 참(Truthy)인 값이나 거짓(Falsy)인 값을 반환하는지에 따라 코드를 수행할지 말지 판단합니다.

// if문
// 조건에 따라 실행되는 조건문 중 if문은 가장 많이 사용되는 문법입니다.
// 중괄호안의 코드가 한 줄 뿐이라면 중괄호를 아래와 같이 생략해서 쓸 수 있습니다.
if (true) console.log("중괄호를 생략했습니다.");

// if-else 문
// 그 밖의 상황인 조건이 거짓일 때 실행할 코드가 필요한 경우 사용하는 것이 else문입니다.
let x = 3;
let y = 7;

if (x == y) {
  document.write("if문으로 실행되었습니다.");
} else {
  document.write("else문으로 실행되었습니다.");
}

// 사용자로부터 입력받은 나이에 따라 다른 인사말을 콘솔로 출력하는 프로그램을 작성하세요.
// 1. 나이가 18세 이상이면 "안녕하세요!"를
// 2. 10세 이상이면 "안녕! 반가워 꼬마친구! ” 를
// 3. 10세 미만이면 “부럽다…” 를 출력합니다.

const age = parseInt(prompt("나이를 말씀해주세요!"));

if (age >= 18) {
  console.log("안녕하세요!");
} else if (age >= 10) {
  console.log("반가워 꼬마야");
} else {
  console.log("부럽다...");
}

// 사용자로부터 입력받은 성적에 따라 성적을 출력하는 프로그램을 작성하세요.
// 1. 성적이 90점 이상이면 "A",
// 2. 80점 이상이면 "B",
// 3. 70점 이상이면 "C",
// 4. 60점 이상이면 "D",
// 5. 그 외에는 “강해져서 돌아와라”를 출력합니다.
const score = parseInt(prompt("お前の点数は？"));
if (score > 100) {
  alert("아니야!");
} else {
  if (score >= 90) {
    console.log("A");
  } else if (score >= 80) {
    console.log("B");
  } else if (score >= 70) {
    console.log("C");
  } else if (score >= 60) {
    console.log("D");
  } else {
    console.log("강해져서 돌아와라.");
  }
}


// 삼항연산자 (Conditional ternary operator)

// 삼항연산자는 if-else 문을 간단하게 표현하는 방법입니다. 삼항연산자, 삼항조건연산자, 삼항식 등 여러가지 이름으로 불립니다. 여기서는 삼항연산자로 통칭하겠습니다.

// -피연산자의 수가 세개((조건) ? (조건이 '참'일 경우 실행할 코드) : (조건이 '거짓'일 경우 실행할 코드 )​;​)
// -값1은 if문의 동작 부분에, 값2는 else문의 동작 부분에 해당
// if문에 비해 조건문을 효율적이고 간격하게 작성(코드상의 단순함). 무분별한 대처x

// 조건식 ? 참일 때 실행될 코드(truthy) : 거짓일 때 실행될 코드(falsy)

let item = true ? console.log('true') : console.log('false');
console.log(item);

-console.log 에서 console은 전역 객체(window 객체)로부터 접근 될 수 있다. 
-콘솔은 윈도우 안에 들어있는 객체이다. console.log에서
log는 객체안에 들어있는 함수이자 메서드를 의미한다. log라는 함수에서 나온 값(value)를 item으로 undefined를 반환한다. 

-삼항연산자는 코드의 실행도 해주고, 코드의 결괏값도 반환도 해준다. 이 점이 if문과 다른 점이다. 즉 if문은 특정 코드 구문을 실행하는 (구)문(Statement)이자 문법, 삼항연산자는 값으로 판단되는 표현식(Expression)입니다.

-const name = function (){} 이것 전체는 함수의 표현식




let price = 5000;

let message = (price>6000) ? '비싸요!' : 
							(price<3000) ? '엄청싸요!' : '적당해요!';

// 위의 코드는 아래와 같다.
let price = 5000;
let message = '';

if (price > 6000) {
		message = '비싸요!';
} else if (price < 3000) {
		message = '엄청싸요!';
} else {
		message = '적당해요!';
}

-위에서 살펴본것 처럼 삼항 조건 연산자는 if문을 간단하게 표현하기 때문에 코드를 가볍게 할 수 있습니다. 하지만, 삼항 조건 연산자가 너무 많은 조건들을 비교할 경우 오히려 if문에 비해 가독성이 떨어질 수 있으므로 주의해야 합니다.

-비교연산자(>,<)는 불리언(true,false)을 반환 
-if문의 할당연산자(=)는 삼항연산자의 할당연산자와는 쓰임이 다르다.

const score = parseInt(prompt("너, 강해?"));

let grade = (score > 100)? alert("아니야!"): (score >= 90) ? "A" : (score >= 80) ? "B" : (score >= 70) ? "C" : (score >= 60) ? "D" : "강해져서 돌아와라.";

console.log(grade);


TIL

<if문과 삼항연산자의 차이를 아시나요>
앞서, scope란?
- 어떤 변수를 선언했을 때, 그 변수를 사용할 수 있는 유효범위를 Scope라고 부른다.
var 함수레벨스코프 재선언o 재할당o
let 블록레벨 스코프, 재선언x 재할당o
const 블록레벨 스코프, 재선언x 재할당x

큰 차이는 할당과 scope,생성

삼항연산자(표현식,Expression), 조건부 연산자
-조건에 대한 결과 값을 바로 변수에 할당할 수 있다.

-scope에 대한 부분에서도 차이가 있음. 삼항은 블록 스코프를 만들수 없고, 그래서 자연스럽게 전역변수를 참조 할 수 있지만 지역변수 생성x 하는 한계

-이렇게 중첩해서 삼항 연산자를 활용하게 되면, if문 보다는 가독성이 떨어져보이는 단점이 있다.

if문(문,Statement)

-변수에 바로 할당할 수 없고 조건식 안에서 할당처리를 해줘야 한다. 
-if~else문의 여러 구문 중 하나만을 실행하게 된다!
-상황에 따라 return문 작성 필요함
-블록문({})을 포함, 지역변수 생성 o, 할당연산자 보다 조금 더 다양한 제어를 할 수 있는 장점



<표현식과 문>
-삼항연산자, 표현식은 하나의 값으로 평가될 수 있는 문(statement)

-if문, 문(statement)은 프로그램을 구성하는 기본 단위이자 최소 실행 단위다.문 은 컴퓨터에 내리는 명령이므로 명령문이라고도 부른다.
문은 선언문, 할당문, 조건문, 반복문 등으로 구분할 수 있다.
